name: CI/CD Pipeline

on: [push]
#  push:
#    branches:
#      - latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      SCANNER_HOME: /usr/local/sonar-scanner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: balogsun/microservices-10-tier-app
          ref: latest

      - name: Set up SonarQube
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          projectKey: 10-Tier
          projectName: 10-Tier
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build and push adservice Docker image
        working-directory: src/adservice
        run: |
          docker build -t balogsun/adservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/adservice:latest
          docker rmi balogsun/adservice:latest

      - name: Build and push cartservice Docker image
        working-directory: src/cartservice/src
        run: |
          docker build -t balogsun/cartservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/cartservice:latest
          docker rmi balogsun/cartservice:latest

      - name: Build and push checkoutservice Docker image
        working-directory: src/checkoutservice
        run: |
          docker build -t balogsun/checkoutservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/checkoutservice:latest
          docker rmi balogsun/checkoutservice:latest

      - name: Build and push currencyservice Docker image
        working-directory: src/currencyservice
        run: |
          docker build -t balogsun/currencyservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/currencyservice:latest
          docker rmi balogsun/currencyservice:latest

      - name: Build and push emailservice Docker image
        working-directory: src/emailservice
        run: |
          docker build -t balogsun/emailservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/emailservice:latest
          docker rmi balogsun/emailservice:latest

      - name: Build and push frontend Docker image
        working-directory: src/frontend
        run: |
          docker build -t balogsun/frontend:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/frontend:latest
          docker rmi balogsun/frontend:latest

      - name: Build and push loadgenerator Docker image
        working-directory: src/loadgenerator
        run: |
          docker build -t balogsun/loadgenerator:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/loadgenerator:latest
          docker rmi balogsun/loadgenerator:latest

      - name: Build and push paymentservice Docker image
        working-directory: src/paymentservice
        run: |
          docker build -t balogsun/paymentservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/paymentservice:latest
          docker rmi balogsun/paymentservice:latest

      - name: Build and push productcatalogservice Docker image
        working-directory: src/productcatalogservice
        run: |
          docker build -t balogsun/productcatalogservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/productcatalogservice:latest
          docker rmi balogsun/productcatalogservice:latest

      - name: Build and push recommendationservice Docker image
        working-directory: src/recommendationservice
        run: |
          docker build -t balogsun/recommendationservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/recommendationservice:latest
          docker rmi balogsun/recommendationservice:latest

      - name: Build and push shippingservice Docker image
        working-directory: src/shippingservice
        run: |
          docker build -t balogsun/shippingservice:latest .
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push balogsun/shippingservice:latest
          docker rmi balogsun/shippingservice:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1 # Change to your region

      - name: Update kubeconfig for EKS
        uses: aws-actions/eks-update-kubeconfig@v2
        with:
          cluster-name: pjct-cluster # Replace with your EKS cluster name
          role-to-assume: arn:aws:iam::570580688935:role/pjct-cluster # Replace with your IAM role ARN

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy to EKS
        run: |
          kubectl apply -f release/kubernetes-manifests4
          kubectl get pods
          kubectl get svc
